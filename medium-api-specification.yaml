swagger: "2.0"
info:
  description: |
    Medium’s unofficial API documentation using OpenAPI specification.

    [Original API document](https://github.com/Medium/medium-api-docs) can also be viewed for most up to date API spec.


  version: "1.0.0"
  title: Medium.com - Unofficial API Spec
  termsOfService: https://medium.com/@feerst/2b405a832a2f
  contact:
    name: https://medium.com/developers/about
host: api.medium.com
basePath: /v1
schemes:
  - https
  

paths:
  /me:
    get:
      tags:
        - Users
      summary: User details
      description: Getting the authenticated user's details
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserResponse"
        401:
          description: The `accessToken` is invalid or has been revoked.
        
  /users/{userId}/publication:
    get:
      summary: User's publications
      description: Returns a full list of publications that the user is related to in some way. This includes all publications the user is subscribed to, writes to, or edits.
      tags:
        - Publication
      parameters:
        - in: path
          name: userId
          description: A unique identifier for the user.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/PublicationResponse"
        401:
          description: The `accessToken` is invalid, lacks the `listPublications` scope or has been revoked.
        403:
          description: The request attempts to list publications for another user.
        
  /publications/{publicationId}/contributors:
    get:
      summary: Contributors of Publication
      description: This endpoint returns a list of contributors for a given publication. In other words, a list of Medium users who are allowed to publish under a publication, as well as a description of their exact role in the publication (for now, either an editor or a writer).
      tags:
        - Publications
        - Users
      parameters:
        - in: path
          name: publicationId
          description: A unique identifier for the publication.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ContibutorResponse"
        401:
          description: The `accessToken` is invalid or has been revoked.

  /users/{authorId}/posts:
    post:
      summary: Create Post
      description: Creates a post on the authenticated user’s profile.
      tags:
        - Users
        - Posts
      parameters:
        - in: path
          name: authorId
          description: authorId is the user id of the authenticated user.
          required: true
          type: string
        - in: body
          name: body
          description: Creates a post for user.
          required: true
          schema:
            $ref: "#/definitions/Post"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PostDetails'
        400:
          description: Required fields were invalid, not specified.
        401:
          description: The `accessToken` is invalid or has been revoked.
        403:
          description: The user does not have permission to publish, or the authorId in the request path points to wrong/non-existent user.
        
    
  /publications/{publicationId}/posts:
    post:
      summary: Create Publication Post
      description: |
        creating a post and associating it with a publication on Medium. The request also shows this association, considering posts a collection of resources under a publication
        
        There are additional rules around publishing that each request to this API must respect:
          - If the authenticated user is an 'editor' for the publication, they can create posts with any publish status. Posts published as 'public' or 'unlisted' will appear in collection immediately, while posts created as 'draft' will remain in pending state under publication.
          - If the authenticated user is a 'writer' for the chosen publication, they can only create a post as a 'draft'. That post will remain in pending state under publication until an editor for the publication approves it.
          - If the authenticated user is neither a 'writer' nor an 'editor', they are not allowed to create any posts in a publication.

      tags:
        - Posts
        - Publications
      parameters:
        - in: path
          name: publicationId
          description: Here publicationId is the id of the publication the post is being created under. The publicationId can be acquired from the API for listing user’s publications.
          required: true
          type: string
        - in: body
          name: body
          description: Creates a post for publication.
          required: true
          schema:
            $ref: "#/definitions/Post"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PostDetails'
        400:
          description: Required fields were invalid, not specified.
        401:
          description: The `accessToken` is invalid or has been revoked.
        403:
          description: The `publicationId` in request path doesn’t point to a publication that the user can publish into.
        

      
definitions:
  UserResponse:
    type: object
    title: User Container
    description: Container object for user info
    properties:
      data:
        $ref: "#/definitions/User"
  User:
    type: object
    properties:
      id:
        type: string
        description: A unique identifier for the user.
      username:
        type: string
        description: The user’s username on Medium.
      name:
        type: string
        description: The user’s name on Medium.
      url:
        type: string
        description: The URL to the user’s profile on Medium
      imageUrl:
        type: string
        description: The URL to the user’s avatar on Medium
  
  
  PublicationResponse:
    title: Publication List Container
    description: Container object for publication list.
    properties: 
      data:
        type: array
        items:
          $ref: "#/definitions/Publication"
  
  Publication:
    type: object
    title: Publication Info
    description: Publications provide a way for authors to work collaboratively within a common narrative framework, brand or point of view.
    properties:
      id:
        type: string
        description: A unique identifier for the publication.
      name:
        type: string
        description: The publication’s name on Medium.
      description:
        type: string
        description: Short description of the publication
      url:
        type: string
        description: The URL to the publication’s homepage
      imageUrl:
        type: string
        description: The URL to the publication’s image/logo
        

  ContibutorResponse:
    title: Contributors list for a publication
    description: list of contributors for a given publication
    properties: 
      data:
        type: array
        items:
          $ref: "#/definitions/Contibutor"
          
  Contibutor:
    type: object
    title: Contributor
    description: Contibutor 
    properties:
      publicationId:
        type: string
        description: An ID for the publication. This can be lifted from response of publications above
      userId:
        type: string
        description: A user ID of the contributor.
      role:
        type: string
        description: Role of the user identified by userId in the publication identified by `publicationId`. *editor* or *writer*


  Post:
    type: object
    title: Post
    required:
      - title
      - contentFormat
      - content
    properties:
      title:
        type: string
        description: The title of the post. Note that this title is used for SEO and when rendering the post as a listing, but will not appear in the actual post—for that, the title must be specified in the content field as well. Titles longer than 100 characters will be ignored. In that case, a title will be synthesized from the first content in the post when it is published.
      contentFormat:
        type: string
        description: The format of the "content" field. There are two valid values, "html", and "markdown"
      content:
        type: string
        description: The body of the post, in a valid, semantic, HTML fragment, or Markdown. Further markups may be supported in the future. For a full list of accepted HTML tags, see here. If you want your title to appear on the post page, you must also include it as part of the post content.
      tags:
        type: array
        items:
          type: string
        description: Tags to classify the post. Only the first three will be used. Tags longer than 25 characters will be ignored.
      canonicalUrl:
        type: string
        description: The original home of this content, if it was originally published elsewhere.
      publishStatus:
        type: string
        default: public
        enum:
        - public
        - draft
        - unlisted
        description: The status of the post. Valid values are `public`, `draft`, or `unlisted`. The default is `public`.
      license:
        type: string
        default: all-rights-reserved
        enum:
        - all-rights-reserved
        - cc-40-by
        - cc-40-by-sa
        - cc-40-by-nd
        - cc-40-by-nc
        - cc-40-by-nc-nd
        - cc-40-by-nc-sa
        - cc-40-zero
        - public-domain
        description: The license of the post. Valid values are `all-rights-reserved`, `cc-40-by`, `cc-40-by-sa`, `cc-40-by-nd`, `cc-40-by-nc`, `cc-40-by-nc-nd`, `cc-40-by-nc-sa`, `cc-40-zero`, `public-domain`. The default is `all-rights-reserved`.
    example:
      title: "Liverpool FC"
      contentFormat: "html"
      content: "<h1>Liverpool FC</h1><p>You’ll never walk alone.</p>"
      canonicalUrl: "http://jamietalbot.com/posts/liverpool-fc"
      tags: 
        - "football"
        - "sport"
        - "Liverpool"
      publishStatus: "public"

  
  
  PostDetails:
    title: Post Details
    description: Details of Post
    properties:
      id:
        type: string
        description: A unique identifier for the post.
      title:
        type: string
        description: The post’s title
      authorId:
        type: string
        description: The userId of the post’s author
      tags:
        type: array
        items:
          type: string
        description: The post’s tags
      url:
        type: string
        description: The URL of the post on Medium 
      canonicalUrl:
        type: string
        description: The canonical URL of the post. If canonicalUrl was not specified in the creation of the post, this field will not be present.
      publishStatus:
        type: string
        description: The publish status of the post.
      publishedAt:
        type: string
        format: date
        description: The post’s published date. If created as a draft, this field will not be present. 
      license:
        type: string
        enum:
        - all-rights-reserved
        - cc-40-by
        - cc-40-by-sa
        - cc-40-by-nd
        - cc-40-by-nc
        - cc-40-by-nc-nd
        - cc-40-by-nc-sa
        - cc-40-zero
        - public-domain
        description: The license of the post.
      licenseUrl:
        type: string
        description: The URL to the license of the post.
        